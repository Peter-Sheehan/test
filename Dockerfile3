FROM python:3.10-slim AS builder

LABEL maintainer="your_name@example.com"

# Set up directories and workdir
WORKDIR /app

# Install required packages for building
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc libpq-dev && \
    rm -rf /var/lib/apt/lists/*

# Copy only requirements and install python dependencies
COPY requirements.txt .

RUN pip install --no-cache-dir -r requirements.txt

# Using python:3.10-alpine for the final image to reduce size
FROM python:3.10-alpine

LABEL maintainer="your_name@example.com"

# Set up directories and add non-root user
WORKDIR /app

# Copy installed dependencies from builder
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10
COPY --from=builder /usr/local/bin/gunicorn /usr/local/bin/gunicorn
COPY --from=builder /usr/local/bin/flask /usr/local/bin/flask

# Copy application source code
COPY . .

# Make the app directory the default
ENV APP_HOME=/app
ENV MY_VAR=default_value

# Create a non-root user
RUN addgroup -S appuser && adduser -S appuser -G appuser
USER appuser

# Expose the application port
EXPOSE 8080

# Start gunicorn
CMD ["gunicorn", "app:app", "--bind", "0.0.0.0:8080"]